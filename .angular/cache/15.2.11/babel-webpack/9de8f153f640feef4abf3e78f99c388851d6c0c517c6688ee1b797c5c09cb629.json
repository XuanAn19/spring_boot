{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../login.service\";\nimport * as i2 from \"@angular/router\";\nexport class AdminGuard {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    if (this.loginService.isLoggenIn() && this.loginService.getUserRole() == \"ADMIN\") {\n      return true;\n    }\n    this.router.navigate(['login']);\n    return false;\n  }\n  static #_ = this.ɵfac = function AdminGuard_Factory(t) {\n    return new (t || AdminGuard)(i0.ɵɵinject(i1.LoginService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AdminGuard,\n    factory: AdminGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,UAAU;EAErBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,iBAAY,GAAZD,YAAY;IAAwB,WAAM,GAANC,MAAM;EAAY;EAC1EC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAI,IAAI,CAACJ,YAAY,CAACK,UAAU,EAAE,IAAI,IAAI,CAACL,YAAY,CAACM,WAAW,EAAE,IAAI,OAAO,EAAE;MAChF,OAAO,IAAI;;IAEb,IAAI,CAACL,MAAM,CAACM,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/B,OAAO,KAAK;EACd;EAAC;qBAZUT,UAAU;EAAA;EAAA;WAAVA,UAAU;IAAAU,SAAVV,UAAU;IAAAW,YAFT;EAAM","names":["AdminGuard","constructor","loginService","router","canActivate","route","state","isLoggenIn","getUserRole","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\HealthCareSystem\\Frontend\\src\\app\\service\\auth\\admin.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from '../login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n\r\n  constructor(private loginService: LoginService, private router: Router) { }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    if (this.loginService.isLoggenIn() && this.loginService.getUserRole() == \"ADMIN\") {\r\n      return true;\r\n    }\r\n    this.router.navigate(['login']);\r\n    return false;\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}