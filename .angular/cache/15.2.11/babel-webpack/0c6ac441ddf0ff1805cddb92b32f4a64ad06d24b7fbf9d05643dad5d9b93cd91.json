{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/normal-user.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"ngx-ui-loader\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\nfunction ContactComponent_span_10_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Message is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactComponent_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtemplate(1, ContactComponent_span_10_span_1_Template, 2, 0, \"span\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(9);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors[\"required\"]);\n  }\n}\nfunction ContactComponent_span_15_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Email is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtemplate(1, ContactComponent_span_15_span_1_Template, 2, 0, \"span\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r3 = i0.ɵɵreference(14);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors[\"required\"]);\n  }\n}\nfunction ContactComponent_span_19_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Name is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtemplate(1, ContactComponent_span_19_span_1_Template, 2, 0, \"span\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r5 = i0.ɵɵreference(18);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r5.errors == null ? null : _r5.errors[\"required\"]);\n  }\n}\nfunction ContactComponent_span_23_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Subject is required.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ContactComponent_span_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtemplate(1, ContactComponent_span_23_span_1_Template, 2, 0, \"span\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r7 = i0.ɵɵreference(22);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r7.errors == null ? null : _r7.errors[\"required\"]);\n  }\n}\nexport class ContactComponent {\n  constructor(userService, snack, ngxService) {\n    this.userService = userService;\n    this.snack = snack;\n    this.ngxService = ngxService;\n    this.query = {\n      email: '',\n      queries: '',\n      name: '',\n      subject: ''\n    };\n  }\n  postQuery() {\n    this.ngxService.start();\n    this.userService.postQueries(this.query).subscribe(data => {\n      console.log(data);\n      this.ngxService.stop();\n      const snackBarRef = this.snack.open(\"Message Sent Successfully..\", 'ok', {\n        verticalPosition: 'top'\n      });\n      snackBarRef.onAction().subscribe(() => {\n        window.location.reload();\n      });\n    }, error => {\n      console.log(error);\n      const snackBarRef = this.snack.open(\"Enter correct email..\", 'ok', {\n        verticalPosition: 'top'\n      });\n      snackBarRef.onAction().subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n  static #_ = this.ɵfac = function ContactComponent_Factory(t) {\n    return new (t || ContactComponent)(i0.ɵɵdirectiveInject(i1.NormalUserService), i0.ɵɵdirectiveInject(i2.MatSnackBar), i0.ɵɵdirectiveInject(i3.NgxUiLoaderService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactComponent,\n    selectors: [[\"app-contact\"]],\n    decls: 26,\n    vars: 9,\n    consts: [[1, \"contact-page\"], [1, \"contact-container\"], [3, \"ngSubmit\"], [\"queryForm\", \"ngForm\"], [1, \"input-div\"], [1, \"input-divs\"], [\"id\", \"message\", \"name\", \"queries\", \"required\", \"\", \"placeholder\", \"Write your message here\", 3, \"ngModel\", \"ngModelChange\"], [\"queries\", \"ngModel\"], [\"style\", \"color: red;\", 4, \"ngIf\"], [1, \"flexColumn\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"required\", \"\", \"placeholder\", \"pat@example.com\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"type\", \"text\", \"id\", \"name\", \"name\", \"name\", \"required\", \"\", \"placeholder\", \"Name\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"ngModel\"], [\"type\", \"text\", \"id\", \"subject\", \"name\", \"subject\", \"required\", \"\", \"placeholder\", \"Subject\", 3, \"ngModel\", \"ngModelChange\"], [\"subject\", \"ngModel\"], [\"type\", \"submit\", 3, \"disabled\"], [2, \"color\", \"red\"], [4, \"ngIf\"]],\n    template: function ContactComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n        i0.ɵɵtext(2, \"Li\\u00EAn h\\u1EC7 v\\u1EDBi ch\\u00FAng t\\u00F4i\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function ContactComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.postQuery();\n        });\n        i0.ɵɵelementStart(6, \"div\", 4)(7, \"div\", 5)(8, \"textarea\", 6, 7);\n        i0.ɵɵlistener(\"ngModelChange\", function ContactComponent_Template_textarea_ngModelChange_8_listener($event) {\n          return ctx.query.queries = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, ContactComponent_span_10_Template, 2, 1, \"span\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9)(12, \"div\", 5)(13, \"input\", 10, 11);\n        i0.ɵɵlistener(\"ngModelChange\", function ContactComponent_Template_input_ngModelChange_13_listener($event) {\n          return ctx.query.email = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, ContactComponent_span_15_Template, 2, 1, \"span\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 5)(17, \"input\", 12, 13);\n        i0.ɵɵlistener(\"ngModelChange\", function ContactComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.query.name = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, ContactComponent_span_19_Template, 2, 1, \"span\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 5)(21, \"input\", 14, 15);\n        i0.ɵɵlistener(\"ngModelChange\", function ContactComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.query.subject = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, ContactComponent_span_23_Template, 2, 1, \"span\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"button\", 16);\n        i0.ɵɵtext(25, \"Submit\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(5);\n        const _r1 = i0.ɵɵreference(9);\n        const _r3 = i0.ɵɵreference(14);\n        const _r5 = i0.ɵɵreference(18);\n        const _r7 = i0.ɵɵreference(22);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.query.queries);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r1.invalid && _r1.touched);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.query.email);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r3.invalid && _r3.touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.query.name);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r5.invalid && _r5.touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.query.subject);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", _r7.invalid && _r7.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    dependencies: [i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm, i5.NgIf],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 934:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(25:3) C:\\\\\\\\Users\\\\\\\\voket\\\\\\\\Desktop\\\\\\\\Moduel2\\\\\\\\HealthCareSystem\\\\\\\\Frontend1\\\\\\\\Frontend\\\\\\\\src\\\\\\\\app\\\\\\\\components\\\\\\\\contact\\\\\\\\contact.component.css Unclosed block\\\\n\\\\n \\\\u001b[90m 23 | \\\\u001b[39m  \\\\u001b[33m}\\\\u001b[39m\\\\n \\\\u001b[90m 24 | \\\\u001b[39m  \\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 25 | \\\\u001b[39m  \\\\u001b[33m.contact-container\\\\u001b[39m \\\\u001b[33m{\\\\u001b[39m\\\\n \\\\u001b[90m    | \\\\u001b[39m  \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 26 | \\\\u001b[39m    display\\\\u001b[33m:\\\\u001b[39m flex\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 27 | \\\\u001b[39m    flex-direction\\\\u001b[33m:\\\\u001b[39m column\\\\u001b[33m;\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t});\\n\\n \\t\\n \\t// startup\\n \\t// Load entry module and return exports\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n \\tvar __webpack_exports__ = {};\\n \\t__webpack_modules__[934]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=contact.component.css.map*/\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","ContactComponent","constructor","userService","snack","ngxService","email","queries","name","subject","postQuery","start","postQueries","query","subscribe","data","console","log","stop","snackBarRef","open","verticalPosition","onAction","window","location","reload","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\voket\\Desktop\\Moduel2\\HealthCareSystem\\Frontend1\\Frontend\\src\\app\\components\\contact\\contact.component.html","C:\\Users\\voket\\Desktop\\Moduel2\\HealthCareSystem\\Frontend1\\Frontend\\src\\app\\components\\contact\\contact.component.ts"],"sourcesContent":["<div class=\"contact-page\">\r\n  <p>Liên hệ với chúng tôi</p>\r\n  <div class=\"contact-container\">\r\n    <form #queryForm=\"ngForm\" (ngSubmit)=\"postQuery()\">\r\n      <div class=\"input-div\">\r\n        <div class=\"input-divs\">\r\n          <textarea id=\"message\" [(ngModel)]=\"query.queries\" #queries=\"ngModel\" name=\"queries\" required\r\n            placeholder=\"Write your message here\"></textarea>\r\n          <span *ngIf=\"queries.invalid && queries.touched\" style=\"color: red;\">\r\n            <span *ngIf=\"queries.errors?.['required']\">Message is required.</span>\r\n          </span>\r\n        </div>\r\n\r\n        <div class=\"flexColumn\">\r\n          <div class=\"input-divs\">\r\n            <input type=\"email\" id=\"email\" [(ngModel)]=\"query.email\" #email=\"ngModel\" name=\"email\" required\r\n              placeholder=\"pat@example.com\">\r\n            <span *ngIf=\"email.invalid && email.touched\" style=\"color: red;\">\r\n              <span *ngIf=\"email.errors?.['required']\">Email is required.</span>\r\n            </span>\r\n          </div>\r\n\r\n          <div class=\"input-divs\">\r\n            <input type=\"text\" id=\"name\" [(ngModel)]=\"query.name\" #name=\"ngModel\" name=\"name\" required\r\n              placeholder=\"Name\">\r\n            <span *ngIf=\"name.invalid && name.touched\" style=\"color: red;\">\r\n              <span *ngIf=\"name.errors?.['required']\">Name is required.</span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"input-divs\">\r\n          <input type=\"text\" id=\"subject\" [(ngModel)]=\"query.subject\" #subject=\"ngModel\" name=\"subject\" required\r\n            placeholder=\"Subject\">\r\n          <span *ngIf=\"subject.invalid && subject.touched\" style=\"color: red;\">\r\n            <span *ngIf=\"subject.errors?.['required']\">Subject is required.</span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      <button [disabled]=\"queryForm.invalid\" type=\"submit\">Submit</button>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { NormalUserService } from 'src/app/service/normal-user.service';\r\nimport { NgxUiLoaderService } from \"ngx-ui-loader\"; // Import NgxUiLoaderService\r\n\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css']\r\n})\r\nexport class ContactComponent {\r\n\r\n  constructor(private userService: NormalUserService, private snack : MatSnackBar, private ngxService: NgxUiLoaderService){}\r\n\r\n  public query={\r\n    email : '',\r\n    queries:'',\r\n    name: '',\r\n    subject: ''\r\n  }\r\n  postQuery(){\r\n    this.ngxService.start();\r\n\r\n    this.userService.postQueries(this.query).subscribe(\r\n      data=>{\r\n        console.log(data);\r\n        this.ngxService.stop();\r\n        const snackBarRef = this.snack.open(\"Message Sent Successfully..\", 'ok', {\r\n          verticalPosition: 'top'\r\n        });\r\n      \r\n        snackBarRef.onAction().subscribe(() => {\r\n          window.location.reload();\r\n        });      },\r\n      error=>{\r\n        console.log(error);\r\n        const snackBarRef = this.snack.open(\"Enter correct email..\", 'ok', {\r\n          verticalPosition: 'top'\r\n        });\r\n      \r\n        snackBarRef.onAction().subscribe(() => {\r\n          window.location.reload();\r\n        });\r\n      }\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}