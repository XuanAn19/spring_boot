{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AddSpecializationComponent = class AddSpecializationComponent {\n  constructor(adminService, snack) {\n    this.adminService = adminService;\n    this.snack = snack;\n    this.specializations = []; // Danh sách chuyên môn\n    this.specializationName = '';\n  }\n  ngOnInit() {\n    this.getAllSpec(); // Lấy danh sách chuyên môn khi component được tải\n  }\n\n  getAllSpec() {\n    this.adminService.getAllSpecializations().subscribe(data => {\n      this.specializations = data; // Gán dữ liệu vào danh sách\n      console.log('Danh sách chuyên môn:', data);\n    }, error => {\n      console.error('Lỗi khi tải danh sách chuyên môn:', error);\n      this.snack.open(\"Không thể tải danh sách chuyên môn.\", 'Đóng', {\n        verticalPosition: 'top'\n      });\n    });\n  }\n  addSpec() {\n    const specialization = {\n      specializationName: this.specializationName\n    };\n    this.adminService.addSpecialization(specialization).subscribe(response => {\n      const snackBarRef = this.snack.open(\"Thêm chuyên môn thành công..\", 'ok', {\n        verticalPosition: 'top'\n      });\n      snackBarRef.onAction().subscribe(() => {\n        window.location.reload();\n      });\n      console.log('Thêm chuyên môn mới:', response);\n      // Handle success, e.g., show success message\n    }, error => {\n      console.error('Lỗi khi thêm chuyên môn:', error);\n      const snackBarRef = this.snack.open(\"Lỗi khi thêm..\", 'ok', {\n        verticalPosition: 'top'\n      });\n      snackBarRef.onAction().subscribe(() => {\n        window.location.reload();\n      });\n      // Handle error, e.g., show error message\n    });\n  }\n};\n\nAddSpecializationComponent = __decorate([Component({\n  selector: 'app-add-specialization',\n  templateUrl: './add-specialization.component.html',\n  styleUrls: ['./add-specialization.component.css']\n})], AddSpecializationComponent);\nexport { AddSpecializationComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAS1C,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAOrCC,YAAoBC,YAA0B,EAAUC,KAAmB;IAAvD,iBAAY,GAAZD,YAAY;IAAwB,UAAK,GAALC,KAAK;IAH7D,oBAAe,GAAU,EAAE,CAAC,CAAC;IAI3B,IAAI,CAACC,kBAAkB,GAAG,EAAE;EAC9B;EACAC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE,CAAC,CAAC;EACrB;;EAEAA,UAAU;IACR,IAAI,CAACJ,YAAY,CAACK,qBAAqB,EAAE,CACtCC,SAAS,CACRC,IAAI,IAAG;MACL,IAAI,CAACC,eAAe,GAAGD,IAAI,CAAC,CAAC;MAC7BE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,IAAI,CAAC;IAC5C,CAAC,EACDI,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MACzD,IAAI,CAACV,KAAK,CAACW,IAAI,CAAC,qCAAqC,EAAE,MAAM,EAAE;QAAEC,gBAAgB,EAAE;MAAK,CAAE,CAAC;IAC7F,CAAC,CACF;EACL;EAEAC,OAAO;IACL,MAAMC,cAAc,GAAG;MAAEb,kBAAkB,EAAE,IAAI,CAACA;IAAkB,CAAE;IACtE,IAAI,CAACF,YAAY,CAACgB,iBAAiB,CAACD,cAAc,CAAC,CAChDT,SAAS,CACRW,QAAQ,IAAG;MACT,MAAMC,WAAW,GAAG,IAAI,CAACjB,KAAK,CAACW,IAAI,CAAC,8BAA8B,EAAE,IAAI,EAAE;QACxEC,gBAAgB,EAAE;OACnB,CAAC;MAEFK,WAAW,CAACC,QAAQ,EAAE,CAACb,SAAS,CAAC,MAAK;QACpCc,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1B,CAAC,CAAC;MACFb,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEO,QAAQ,CAAC;MAC7C;IACF,CAAC,EACDN,KAAK,IAAG;MACNF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMO,WAAW,GAAG,IAAI,CAACjB,KAAK,CAACW,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE;QAC1DC,gBAAgB,EAAE;OACnB,CAAC;MAEFK,WAAW,CAACC,QAAQ,EAAE,CAACb,SAAS,CAAC,MAAK;QACpCc,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1B,CAAC,CAAC;MACF;IACF,CAAC,CACF;EACL;CACD;;AAxDYxB,0BAA0B,eALtCD,SAAS,CAAC;EACT0B,QAAQ,EAAE,wBAAwB;EAClCC,WAAW,EAAE,qCAAqC;EAClDC,SAAS,EAAE,CAAC,oCAAoC;CACjD,CAAC,GACW3B,0BAA0B,CAwDtC;SAxDYA,0BAA0B","names":["Component","AddSpecializationComponent","constructor","adminService","snack","specializationName","ngOnInit","getAllSpec","getAllSpecializations","subscribe","data","specializations","console","log","error","open","verticalPosition","addSpec","specialization","addSpecialization","response","snackBarRef","onAction","window","location","reload","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\voket\\Desktop\\Moduel2\\HealthCareSystem\\Frontend1\\Frontend\\src\\app\\components\\admin\\add-specialization\\add-specialization.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { AdminService } from 'src/app/service/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-add-specialization',\r\n  templateUrl: './add-specialization.component.html',\r\n  styleUrls: ['./add-specialization.component.css']\r\n})\r\nexport class AddSpecializationComponent implements OnInit{\r\n\r\n\r\n  specializationName: string;\r\n  specializations: any[] = []; // Danh sách chuyên môn\r\n\r\n  \r\n  constructor(private adminService: AdminService, private snack : MatSnackBar) {\r\n    this.specializationName = '';\r\n  }\r\n  ngOnInit(): void {\r\n    this.getAllSpec(); // Lấy danh sách chuyên môn khi component được tải\r\n  }\r\n\r\n  getAllSpec(): void {\r\n    this.adminService.getAllSpecializations()\r\n      .subscribe(\r\n        data => {\r\n          this.specializations = data; // Gán dữ liệu vào danh sách\r\n          console.log('Danh sách chuyên môn:', data);\r\n        },\r\n        error => {\r\n          console.error('Lỗi khi tải danh sách chuyên môn:', error);\r\n          this.snack.open(\"Không thể tải danh sách chuyên môn.\", 'Đóng', { verticalPosition: 'top' });\r\n        }\r\n      );\r\n  }\r\n\r\n  addSpec() {\r\n    const specialization = { specializationName: this.specializationName };\r\n    this.adminService.addSpecialization(specialization)\r\n      .subscribe(\r\n        response => {\r\n          const snackBarRef = this.snack.open(\"Thêm chuyên môn thành công..\", 'ok', {\r\n            verticalPosition: 'top'\r\n          });\r\n        \r\n          snackBarRef.onAction().subscribe(() => {\r\n            window.location.reload();\r\n          });\r\n          console.log('Thêm chuyên môn mới:', response);\r\n          // Handle success, e.g., show success message\r\n        },\r\n        error => {\r\n          console.error('Lỗi khi thêm chuyên môn:', error);\r\n          const snackBarRef = this.snack.open(\"Lỗi khi thêm..\", 'ok', {\r\n            verticalPosition: 'top'\r\n          });\r\n        \r\n          snackBarRef.onAction().subscribe(() => {\r\n            window.location.reload();\r\n          });\r\n          // Handle error, e.g., show error message\r\n        }\r\n      );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}