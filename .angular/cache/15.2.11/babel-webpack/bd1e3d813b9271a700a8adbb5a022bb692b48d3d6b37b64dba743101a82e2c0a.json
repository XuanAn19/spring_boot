{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./login.service\";\nexport class AppointmentService {\n  constructor(http, loginService) {\n    this.http = http;\n    this.loginService = loginService;\n    this.baseUrl = 'http://localhost:8181/appointment'; // Spring Boot URL\n  }\n\n  bookAppointment(appointment) {\n    const url = `${this.baseUrl}/`;\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\n    return this.http.post(url, appointment, {\n      headers\n    });\n  }\n  getAppointmentsByUserId(user_id) {\n    const url = `${this.baseUrl}/getByUserId/${user_id}`;\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\n    return this.http.get(url, {\n      headers\n    });\n  }\n  getAppointmentsByDoctorId(doctor_id) {\n    const url = `${this.baseUrl}/getByDoctorId/${doctor_id}`;\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\n    return this.http.get(url, {\n      headers\n    });\n  }\n  updateStatus(appointmentId, status) {\n    const url = `${this.baseUrl}/updateStatus/${appointmentId}`;\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\n    return this.http.put(url, {\n      status\n    }, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function AppointmentService_Factory(t) {\n    return new (t || AppointmentService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LoginService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppointmentService,\n    factory: AppointmentService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAQ9D,OAAM,MAAOC,kBAAkB;EAK7BC,YAAoBC,IAAgB,EAAUC,YAA2B;IAArD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;IAHlD,YAAO,GAAG,mCAAmC,CAAC,CAAC;EAGsB;;EAE7EC,eAAe,CAACC,WAAgB;IAC9B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,GAAG;IAC9B,MAAMC,OAAO,GAAG,IAAIT,WAAW,EAAE,CAACU,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACN,YAAY,CAACO,QAAQ,EAAE,CAAC;IAChG,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAML,GAAG,EAAED,WAAW,EAAE;MAACG;IAAO,CAAC,CAAC;EAEzD;EAEAI,uBAAuB,CAACC,OAAW;IACjC,MAAMP,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,gBAAgBM,OAAO,EAAE;IACpD,MAAML,OAAO,GAAG,IAAIT,WAAW,EAAE,CAACU,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACN,YAAY,CAACO,QAAQ,EAAE,CAAC;IAChG,OAAO,IAAI,CAACR,IAAI,CAACY,GAAG,CAAMR,GAAG,EAAE;MAACE;IAAO,CAAC,CAAC;EAC3C;EAEAO,yBAAyB,CAACC,SAAa;IACrC,MAAMV,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,kBAAkBS,SAAS,EAAE;IACxD,MAAMR,OAAO,GAAG,IAAIT,WAAW,EAAE,CAACU,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACN,YAAY,CAACO,QAAQ,EAAE,CAAC;IAChG,OAAO,IAAI,CAACR,IAAI,CAACY,GAAG,CAAMR,GAAG,EAAE;MAACE;IAAO,CAAC,CAAC;EAC3C;EAGAS,YAAY,CAACC,aAAkB,EAAEC,MAAU;IACzC,MAAMb,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,iBAAiBW,aAAa,EAAE;IAC3D,MAAMV,OAAO,GAAG,IAAIT,WAAW,EAAE,CAACU,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACN,YAAY,CAACO,QAAQ,EAAE,CAAC;IAChG,OAAO,IAAI,CAACR,IAAI,CAACkB,GAAG,CAAMd,GAAG,EAAE;MAACa;IAAM,CAAC,EAAC;MAACX;IAAO,CAAC,CAAC;EACpD;EAAC;qBA/BUR,kBAAkB;EAAA;EAAA;WAAlBA,kBAAkB;IAAAqB,SAAlBrB,kBAAkB;IAAAsB,YAFjB;EAAM","names":["HttpHeaders","AppointmentService","constructor","http","loginService","bookAppointment","appointment","url","baseUrl","headers","set","getToken","post","getAppointmentsByUserId","user_id","get","getAppointmentsByDoctorId","doctor_id","updateStatus","appointmentId","status","put","factory","providedIn"],"sourceRoot":"","sources":["C:\\HealthCareSystem\\Frontend\\src\\app\\service\\appointment.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppointmentService {\r\n\r\n  private baseUrl = 'http://localhost:8181/appointment'; // Spring Boot URL\r\n\r\n\r\n  constructor(private http: HttpClient, private loginService : LoginService) { }\r\n\r\n  bookAppointment(appointment: any): Observable<any> {\r\n    const url = `${this.baseUrl}/`;\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\r\n    return this.http.post<any>(url, appointment, {headers});\r\n    \r\n  }\r\n\r\n  getAppointmentsByUserId(user_id:any): Observable<any> {\r\n    const url = `${this.baseUrl}/getByUserId/${user_id}`;\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\r\n    return this.http.get<any>(url, {headers});\r\n  }\r\n\r\n  getAppointmentsByDoctorId(doctor_id:any): Observable<any> {\r\n    const url = `${this.baseUrl}/getByDoctorId/${doctor_id}`;\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\r\n    return this.http.get<any>(url, {headers});\r\n  }\r\n\r\n\r\n  updateStatus(appointmentId: any, status:any): Observable<any> {\r\n    const url = `${this.baseUrl}/updateStatus/${appointmentId}`;\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\r\n    return this.http.put<any>(url, {status},{headers});\r\n  }\r\n\r\n \r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}