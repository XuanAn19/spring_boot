{"ast":null,"code":"import Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/snack-bar\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/service/doctor.service\";\nimport * as i4 from \"src/app/service/appointment.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nfunction UserDashboardComponent_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const doctorSpec_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", doctorSpec_r2.doctor.userId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", doctorSpec_r2.doctor.user.firstName, \" \", doctorSpec_r2.doctor.user.lastName, \" - \", doctorSpec_r2.specialization.specializationName, \" \");\n  }\n}\nexport class UserDashboardComponent {\n  constructor(snack, router, doctorService, appointmentService) {\n    this.snack = snack;\n    this.router = router;\n    this.doctorService = doctorService;\n    this.appointmentService = appointmentService;\n    this.doctorSpecs = [];\n    this.appointment = {\n      doctor_id: 0,\n      user_id: 0,\n      appointmentDate: '',\n      appointmentTime: '',\n      bookingDate: Date.now(),\n      reason: ''\n    };\n  }\n  ngOnInit() {\n    this.getAllDoctorSpec();\n  }\n  getAllDoctorSpec() {\n    this.doctorService.getAllDoctorSpec().subscribe(data => {\n      this.doctorSpecs = data;\n      console.log(data);\n    }, error => {\n      console.log(error);\n    });\n  }\n  getDoctorSpecByDoctorId(doctorId) {\n    this.doctorService.getDoctorSpecializationByDoctorId(doctorId).subscribe(data => {\n      console.log(data);\n    });\n  }\n  bookAppointment() {\n    //to set user_id\n    let userStr = localStorage.getItem('user');\n    if (userStr) {\n      let user = JSON.parse(userStr);\n      this.appointment.user_id = user.userId;\n    } else {\n      console.error('User data not found in localStorage.');\n    }\n    this.appointmentService.bookAppointment(this.appointment).subscribe(data => {\n      console.log(data);\n      Swal.fire({\n        title: \"Appointment booked successfully\",\n        text: \"Please wait for the doctor's approval\",\n        icon: \"success\",\n        confirmButtonText: 'OK'\n      }).then(result => {\n        if (result.isConfirmed) {\n          this.router.navigate(['/userAppointments']);\n        }\n      });\n    }, error => {\n      console.log(error);\n      const snackBarRef = this.snack.open(\"Error Booking Appointment..\", 'ok', {\n        verticalPosition: 'top'\n      });\n      snackBarRef.onAction().subscribe(() => {\n        window.location.reload();\n      });\n    });\n  }\n  static #_ = this.ɵfac = function UserDashboardComponent_Factory(t) {\n    return new (t || UserDashboardComponent)(i0.ɵɵdirectiveInject(i1.MatSnackBar), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.DoctorService), i0.ɵɵdirectiveInject(i4.AppointmentService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserDashboardComponent,\n    selectors: [[\"app-user-dashboard\"]],\n    decls: 33,\n    vars: 6,\n    consts: [[1, \"appointment-page\"], [1, \"appointment-container\"], [\"id\", \"appointment-heading\"], [1, \"appointment-form\", 3, \"ngSubmit\"], [\"appointmentForm\", \"ngForm\"], [1, \"input-div\"], [1, \"input-divs\"], [\"id\", \"doctor_id\", \"name\", \"doctor_id\", \"required\", \"\", 1, \"appointment-input\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"date\", \"id\", \"appointmentDate\", \"name\", \"appointmentDate\", \"required\", \"\", \"placeholder\", \"Appointment Date\", 1, \"appointment-input\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"appointmentTime\", \"name\", \"appointmentTime\", \"required\", \"\", 1, \"appointment-input\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"\", \"disabled\", \"\"], [\"value\", \"10:00 AM\"], [\"value\", \"12:00 PM\"], [\"value\", \"02:00 PM\"], [\"value\", \"04:00 PM\"], [\"value\", \"06:00 PM\"], [\"id\", \"reason\", \"name\", \"reason\", \"placeholder\", \"l\\u00FD Do\", \"required\", \"\", \"rows\", \"3\", 1, \"appointment-input\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"appointment-button\", 3, \"disabled\"], [3, \"value\"]],\n    template: function UserDashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"p\", 2);\n        i0.ɵɵtext(3, \"\\u0110\\u1EB6T L\\u1ECACH H\\u1EB8N\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 3, 4);\n        i0.ɵɵlistener(\"ngSubmit\", function UserDashboardComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.bookAppointment();\n        });\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"div\", 6)(8, \"select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function UserDashboardComponent_Template_select_ngModelChange_8_listener($event) {\n          return ctx.appointment.doctor_id = $event;\n        });\n        i0.ɵɵtemplate(9, UserDashboardComponent_option_9_Template, 2, 4, \"option\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"div\", 6)(12, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function UserDashboardComponent_Template_input_ngModelChange_12_listener($event) {\n          return ctx.appointment.appointmentDate = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(13, \"div\", 5)(14, \"div\", 6)(15, \"select\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function UserDashboardComponent_Template_select_ngModelChange_15_listener($event) {\n          return ctx.appointment.appointmentTime = $event;\n        });\n        i0.ɵɵelementStart(16, \"option\", 11);\n        i0.ɵɵtext(17, \"Th\\u1EDDi Gian\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"option\", 12);\n        i0.ɵɵtext(19, \"10 AM\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"option\", 13);\n        i0.ɵɵtext(21, \"12 PM\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"option\", 14);\n        i0.ɵɵtext(23, \"2 PM\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"option\", 15);\n        i0.ɵɵtext(25, \"4 PM\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"option\", 16);\n        i0.ɵɵtext(27, \"6 PM\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(28, \"div\", 5)(29, \"div\", 6)(30, \"textarea\", 17);\n        i0.ɵɵlistener(\"ngModelChange\", function UserDashboardComponent_Template_textarea_ngModelChange_30_listener($event) {\n          return ctx.appointment.reason = $event;\n        });\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(31, \"button\", 18);\n        i0.ɵɵtext(32, \"\\u0110\\u1EB7t L\\u1ECBch\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(5);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.doctor_id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.doctorSpecs);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.appointmentDate);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.appointmentTime);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngModel\", ctx.appointment.reason);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", _r0.invalid);\n      }\n    },\n    dependencies: [i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm, i6.NgForOf],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n \\tvar __webpack_modules__ = ({\\n\\n 192:\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\nSyntaxError\\\\n\\\\n(74:3) C:\\\\\\\\HealthCareSystem\\\\\\\\Frontend\\\\\\\\src\\\\\\\\app\\\\\\\\components\\\\\\\\normalUser\\\\\\\\user-dashboard\\\\\\\\user-dashboard.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 72 | \\\\u001b[39m  border\\\\u001b[33m:\\\\u001b[39m 1px solid \\\\u001b[35m#ddd\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 73 | \\\\u001b[39m  padding\\\\u001b[33m:\\\\u001b[39m 0\\\\u001b[33m;\\\\u001b[39m\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 74 | \\\\u001b[39m  b\\\\n \\\\u001b[90m    | \\\\u001b[39m  \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 75 | \\\\u001b[39m  \\\\n \\\\u001b[90m 76 | \\\\u001b[39m  \\\\u001b[33m}\\\\u001b[39m\\\\n\\\");\\n\\n })\\n\\n \\t})[_ngcontent-%COMP%];\\n\\n \\t\\n \\t//[_ngcontent-%COMP%]   startup[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   Load[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   and[_ngcontent-%COMP%]   return[_ngcontent-%COMP%]   exports[_ngcontent-%COMP%]   //[_ngcontent-%COMP%]   This[_ngcontent-%COMP%]   entry[_ngcontent-%COMP%]   module[_ngcontent-%COMP%]   doesn't[_ngcontent-%COMP%]   tell[_ngcontent-%COMP%]   about[_ngcontent-%COMP%]   it's[_ngcontent-%COMP%]   top-level[_ngcontent-%COMP%]   declarations[_ngcontent-%COMP%]   so[_ngcontent-%COMP%]   it[_ngcontent-%COMP%]   can't[_ngcontent-%COMP%]   be[_ngcontent-%COMP%]   inlined[_ngcontent-%COMP%]   var[_ngcontent-%COMP%]   __webpack_exports__[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] {};\\n \\t__webpack_modules__[192]();\\n \\tresource = __webpack_exports__;\\n \\t\\n })()\\n;\\n/*# sourceMappingURL=user-dashboard.component.css.map*/\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Swal","i0","UserDashboardComponent","constructor","snack","router","doctorService","appointmentService","doctor_id","user_id","appointmentDate","appointmentTime","bookingDate","Date","now","reason","ngOnInit","getAllDoctorSpec","subscribe","data","doctorSpecs","console","log","error","getDoctorSpecByDoctorId","doctorId","getDoctorSpecializationByDoctorId","bookAppointment","userStr","localStorage","getItem","user","JSON","parse","appointment","userId","fire","title","text","icon","confirmButtonText","then","result","isConfirmed","navigate","snackBarRef","open","verticalPosition","onAction","window","location","reload","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\HealthCareSystem\\Frontend\\src\\app\\components\\normalUser\\user-dashboard\\user-dashboard.component.ts","C:\\HealthCareSystem\\Frontend\\src\\app\\components\\normalUser\\user-dashboard\\user-dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { AppointmentService } from 'src/app/service/appointment.service';\r\nimport { DoctorService } from 'src/app/service/doctor.service';\r\nimport Swal from 'sweetalert2';\r\n\r\n@Component({\r\n  selector: 'app-user-dashboard',\r\n  templateUrl: './user-dashboard.component.html',\r\n  styleUrls: ['./user-dashboard.component.css']\r\n})\r\nexport class UserDashboardComponent implements OnInit {\r\n\r\n  doctorSpecs: any[] = [];\r\n\r\n  appointment = {\r\n    doctor_id: 0,\r\n    user_id: 0,\r\n    appointmentDate: '',\r\n    appointmentTime: '',\r\n    bookingDate: Date.now(),\r\n    reason: ''\r\n  }\r\n\r\n\r\n  constructor(private snack : MatSnackBar ,private router : Router,private doctorService: DoctorService, private appointmentService: AppointmentService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getAllDoctorSpec();\r\n  }\r\n\r\n  getAllDoctorSpec() {\r\n\r\n    this.doctorService.getAllDoctorSpec().subscribe(\r\n      data => {\r\n        this.doctorSpecs = data;\r\n        console.log(data);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  getDoctorSpecByDoctorId(doctorId: any) {\r\n    this.doctorService.getDoctorSpecializationByDoctorId(doctorId).subscribe(\r\n      data => {\r\n        console.log(data);\r\n      }\r\n    )\r\n  }\r\n\r\n  bookAppointment() {\r\n    //to set user_id\r\n    let userStr: any = localStorage.getItem('user');\r\n    if (userStr) {\r\n      let user = JSON.parse(userStr);\r\n      this.appointment.user_id = user.userId;\r\n    } else {\r\n      console.error('User data not found in localStorage.');\r\n    }\r\n\r\n    this.appointmentService.bookAppointment(this.appointment).subscribe(\r\n      data => {\r\n        console.log(data);\r\n        Swal.fire({\r\n          title: \"Appointment booked successfully\",\r\n          text: \"Please wait for the doctor's approval\",\r\n          icon: \"success\",\r\n          confirmButtonText: 'OK',\r\n      }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            this.router.navigate(['/userAppointments']);\r\n          }\r\n      });\r\n\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        const snackBarRef = this.snack.open(\"Error Booking Appointment..\", 'ok', {\r\n          verticalPosition: 'top'\r\n        });\r\n      \r\n        snackBarRef.onAction().subscribe(() => {\r\n          window.location.reload();\r\n        });\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"appointment-page\">\r\n  <div class=\"appointment-container\">\r\n    <p id=\"appointment-heading\">ĐẶT LỊCH HẸN</p>\r\n    <form #appointmentForm=\"ngForm\" (ngSubmit)=\"bookAppointment()\" class=\"appointment-form\">\r\n      \r\n      <div class=\"input-div\">\r\n        <div class=\"input-divs\">\r\n          <select  id=\"doctor_id\" name=\"doctor_id\" [(ngModel)]=\"appointment.doctor_id\" class=\"appointment-input\" required>\r\n\r\n            <option *ngFor=\"let doctorSpec of doctorSpecs\" [value]=\"doctorSpec.doctor.userId\">\r\n              {{ doctorSpec.doctor.user.firstName }} {{ doctorSpec.doctor.user.lastName }} - {{ doctorSpec.specialization.specializationName }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      \r\n\r\n      <!-- Appointment Date Field -->\r\n      <div class=\"input-div\">\r\n        <div class=\"input-divs\">\r\n          <input type=\"date\" id=\"appointmentDate\" name=\"appointmentDate\" [(ngModel)]=\"appointment.appointmentDate\" required class=\"appointment-input\" placeholder=\"Appointment Date\">\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Appointment Time Field -->\r\n      <div class=\"input-div\">\r\n        <div class=\"input-divs\">\r\n          <select  id=\"appointmentTime\" name=\"appointmentTime\" [(ngModel)]=\"appointment.appointmentTime\" required\r\n            class=\"appointment-input\">\r\n            <option value=\"\" disabled>Thời Gian</option>\r\n            <option value=\"10:00 AM\">10 AM</option>\r\n            <option value=\"12:00 PM\">12 PM</option>\r\n            <option value=\"02:00 PM\">2 PM</option>\r\n            <option value=\"04:00 PM\">4 PM</option>\r\n            <option value=\"06:00 PM\">6 PM</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <!-- Reason Field -->\r\n      <div class=\"input-div\">\r\n        <div class=\"input-divs\">\r\n          <textarea id=\"reason\" name=\"reason\" [(ngModel)]=\"appointment.reason\" class=\"appointment-input\" placeholder=\"lý Do\" required  rows=\"3\"></textarea>\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <button type=\"submit\" [disabled]=\"appointmentForm.invalid\" class=\"appointment-button\">Đặt Lịch</button>\r\n      \r\n    </form>\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}