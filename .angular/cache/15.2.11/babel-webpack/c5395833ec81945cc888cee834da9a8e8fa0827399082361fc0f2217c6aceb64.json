{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/admin.service\";\nimport * as i2 from \"@angular/common\";\nfunction AddUserComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function AddUserComponent_tr_15_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteUser(user_r1.userId));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", user_r1.user.firstName, \" \", user_r1.user.lastName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.user.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.user.role);\n  }\n}\nexport class AddUserComponent {\n  constructor(admin) {\n    this.admin = admin;\n    this.users = [];\n    this.selectedUser = null;\n    this.newUser = {};\n  }\n  ngOnInit() {\n    this.fetchUsers();\n  }\n  fetchUsers() {\n    this.admin.getAllUsers().subscribe(data => {\n      this.users = data;\n    }, error => {\n      console.error('Error fetching users:', error);\n    });\n  }\n  createUser() {\n    this.admin.createNormalUser(this.newUser).subscribe(response => {\n      console.log('User created successfully:', response);\n      this.fetchUsers(); // Reload users after creating a new user\n      this.resetForm(); // Reset the form fields\n    }, error => {\n      console.error('Error creating user:', error);\n    });\n  }\n  resetForm() {\n    this.newUser = {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      role: 'NORMAL'\n    }; // Reset form values\n  }\n  // Update user\n  updateUser() {\n    if (this.selectedUser) {\n      this.admin.updateUser(this.selectedUser.email, this.selectedUser).subscribe(response => {\n        this.fetchUsers(); // Refresh the list after updating\n        alert('User updated successfully!');\n      }, error => {\n        console.error('Error updating user:', error);\n      });\n    }\n  }\n  // Delete user\n  deleteUser(userId) {\n    this.admin.deleteNormalUser(userId).subscribe(response => {\n      this.fetchUsers(); // Refresh the list after deletion\n      alert('User deleted successfully!');\n    }, error => {\n      console.error('Error deleting user:', error);\n    });\n  }\n  // Select user for editing\n  selectUser(user) {\n    this.selectedUser = {\n      ...user\n    }; // Clone to prevent direct modification\n  }\n  // Reset selection\n  resetSelection() {\n    this.selectedUser = null;\n  }\n  static #_ = this.ɵfac = function AddUserComponent_Factory(t) {\n    return new (t || AddUserComponent)(i0.ɵɵdirectiveInject(i1.AdminService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddUserComponent,\n    selectors: [[\"app-add-user\"]],\n    decls: 16,\n    vars: 1,\n    consts: [[1, \"user-management\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function AddUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Danh S\\u00E1ch c\\u00E1c quy\\u1EC1n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"table\")(4, \"thead\")(5, \"tr\")(6, \"th\");\n        i0.ɵɵtext(7, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\");\n        i0.ɵɵtext(9, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Role\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"Actions\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"tbody\");\n        i0.ɵɵtemplate(15, AddUserComponent_tr_15_Template, 10, 4, \"tr\", 1);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\".user-management[_ngcontent-%COMP%] {\\r\\n    width: 80%;\\r\\n    margin: 80px auto 0; \\r\\n    padding: 20px;\\r\\n    background-color: #ffffff;\\r\\n    border-radius: 15px;\\r\\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\\r\\n  }\\r\\n  \\r\\n  \\r\\n  form[_ngcontent-%COMP%] {\\r\\n    margin-bottom: 20px;\\r\\n    background-color: #f9f9f9;\\r\\n    padding: 20px;\\r\\n    border-radius: 10px;\\r\\n    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\\r\\n  }\\r\\n  \\r\\n  label[_ngcontent-%COMP%] {\\r\\n    display: block;\\r\\n    margin: 10px 0 5px;\\r\\n    font-size: 14px;\\r\\n    color: #555;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  \\r\\n  input[_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n    margin: 5px 0 15px;\\r\\n    border: 1px solid #ddd;\\r\\n    border-radius: 8px;\\r\\n    font-size: 14px;\\r\\n    color: #333;\\r\\n    transition: border-color 0.3s ease, box-shadow 0.3s ease;\\r\\n  }\\r\\n  \\r\\n  input[_ngcontent-%COMP%]:focus, select[_ngcontent-%COMP%]:focus {\\r\\n    border-color: #ff6f61; \\r\\n    outline: none;\\r\\n    box-shadow: 0 0 5px rgba(255, 111, 97, 0.5);\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%] {\\r\\n    padding: 10px 20px;\\r\\n    margin-top: 10px;\\r\\n    background-color: #ff6f61; \\r\\n    color: white;\\r\\n    border: none;\\r\\n    border-radius: 8px;\\r\\n    cursor: pointer;\\r\\n    font-size: 14px;\\r\\n    font-weight: bold;\\r\\n    transition: background-color 0.3s ease, transform 0.2s ease;\\r\\n  }\\r\\n  \\r\\n  button[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #ff3b2f; \\r\\n    transform: translateY(-2px); \\r\\n  }\\r\\n  \\r\\n  \\r\\n  table[_ngcontent-%COMP%] {\\r\\n    width: 100%;\\r\\n    border-collapse: collapse;\\r\\n    margin-top: 20px;\\r\\n    background-color: #ffffff;\\r\\n    border-radius: 10px;\\r\\n    overflow: hidden;\\r\\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);\\r\\n  }\\r\\n  \\r\\n  th[_ngcontent-%COMP%], td[_ngcontent-%COMP%] {\\r\\n    padding: 12px;\\r\\n    text-align: left;\\r\\n    border: 1px solid #f0f0f0;\\r\\n  }\\r\\n  \\r\\n  th[_ngcontent-%COMP%] {\\r\\n    background-color: #ff6f61; \\r\\n    color: white;\\r\\n    font-weight: bold;\\r\\n  }\\r\\n  \\r\\n  tr[_ngcontent-%COMP%]:nth-child(even) {\\r\\n    background-color: #f9f9f9; \\r\\n  }\\r\\n  \\r\\n  tr[_ngcontent-%COMP%]:hover {\\r\\n    background-color: #fff3f2; \\r\\n    transition: background-color 0.3s ease;\\r\\n  }\\r\\n  h2[_ngcontent-%COMP%]{\\r\\n    text-align: center;\\r\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9hZGQtdXNlci9hZGQtdXNlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHFDQUFxQztBQUNyQztJQUNJLFVBQVU7SUFDVixtQkFBbUIsRUFBRSxnQ0FBZ0M7SUFDckQsYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixtQkFBbUI7SUFDbkIseUNBQXlDO0VBQzNDOztFQUVBLG1CQUFtQjtFQUNuQjtJQUNFLG1CQUFtQjtJQUNuQix5QkFBeUI7SUFDekIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix3Q0FBd0M7RUFDMUM7O0VBRUE7SUFDRSxjQUFjO0lBQ2Qsa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixXQUFXO0lBQ1gsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UsV0FBVztJQUNYLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsV0FBVztJQUNYLHdEQUF3RDtFQUMxRDs7RUFFQTtJQUNFLHFCQUFxQixFQUFFLDJCQUEyQjtJQUNsRCxhQUFhO0lBQ2IsMkNBQTJDO0VBQzdDOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQix5QkFBeUIsRUFBRSxpQkFBaUI7SUFDNUMsWUFBWTtJQUNaLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGVBQWU7SUFDZixpQkFBaUI7SUFDakIsMkRBQTJEO0VBQzdEOztFQUVBO0lBQ0UseUJBQXlCLEVBQUUsMEJBQTBCO0lBQ3JELDJCQUEyQixFQUFFLDBCQUEwQjtFQUN6RDs7RUFFQSxtQkFBbUI7RUFDbkI7SUFDRSxXQUFXO0lBQ1gseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQix5QkFBeUI7SUFDekIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQix5Q0FBeUM7RUFDM0M7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtFQUMzQjs7RUFFQTtJQUNFLHlCQUF5QixFQUFFLDRCQUE0QjtJQUN2RCxZQUFZO0lBQ1osaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UseUJBQXlCLEVBQUUsZ0NBQWdDO0VBQzdEOztFQUVBO0lBQ0UseUJBQXlCLEVBQUUsc0JBQXNCO0lBQ2pELHNDQUFzQztFQUN4QztFQUNBO0lBQ0Usa0JBQWtCO0VBQ3BCIiwic291cmNlc0NvbnRlbnQiOlsiLyogw4TCkMOhwrrCo20gYsOhwrrCo28gbsOhwrvCmWkgZHVuZyBuw6HCusKxbSBkw4bCsMOhwrvCm2kgbmF2YmFyICovXHJcbi51c2VyLW1hbmFnZW1lbnQge1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIG1hcmdpbjogODBweCBhdXRvIDA7IC8qIEtob8OhwrrCo25nIGPDg8KhY2ggdMOhwrvCqyBuYXZiYXIgeHXDocK7wpFuZyAqL1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG4gICAgYm94LXNoYWRvdzogMCA0cHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgfVxyXG4gIFxyXG4gIC8qIEZvcm0gZMOhwrvChSB0aMOGwrDDhsKhbmcgKi9cclxuICBmb3JtIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjlmOWY5O1xyXG4gICAgcGFkZGluZzogMjBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDJweCA1cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIH1cclxuICBcclxuICBsYWJlbCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbjogMTBweCAwIDVweDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGNvbG9yOiAjNTU1O1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0LCBzZWxlY3Qge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgbWFyZ2luOiA1cHggMCAxNXB4O1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIGNvbG9yOiAjMzMzO1xyXG4gICAgdHJhbnNpdGlvbjogYm9yZGVyLWNvbG9yIDAuM3MgZWFzZSwgYm94LXNoYWRvdyAwLjNzIGVhc2U7XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0OmZvY3VzLCBzZWxlY3Q6Zm9jdXMge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAjZmY2ZjYxOyAvKiBNw4PCoHUgaMOhwrvCk25nIGNhbSBraGkgZm9jdXMgKi9cclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBib3gtc2hhZG93OiAwIDAgNXB4IHJnYmEoMjU1LCAxMTEsIDk3LCAwLjUpO1xyXG4gIH1cclxuICBcclxuICBidXR0b24ge1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjZmNjE7IC8qIE3Dg8KgdSBow6HCu8KTbmcgY2FtICovXHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcyBlYXNlLCB0cmFuc2Zvcm0gMC4ycyBlYXNlO1xyXG4gIH1cclxuICBcclxuICBidXR0b246aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmM2IyZjsgLyogTcODwqB1IMOEwpHDocK6wq1tIGjDhsKhbiBraGkgaG92ZXIgKi9cclxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTsgLyogSGnDocK7wod1IMOhwrvCqW5nIG5ow6HCusKlYyBsw4PCqm4gbmjDocK6wrkgKi9cclxuICB9XHJcbiAgXHJcbiAgLyogQsOhwrrCo25nIGTDocK7woUgdGjDhsKww4bCoW5nICovXHJcbiAgdGFibGUge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIH1cclxuICBcclxuICB0aCwgdGQge1xyXG4gICAgcGFkZGluZzogMTJweDtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZjBmMGYwO1xyXG4gIH1cclxuICBcclxuICB0aCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmY2ZjYxOyAvKiBNw4PCoHUgaMOhwrvCk25nIGNhbSBjaG8gaGVhZGVyICovXHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICB9XHJcbiAgXHJcbiAgdHI6bnRoLWNoaWxkKGV2ZW4pIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmOWY5Zjk7IC8qIE3Dg8KgdSBuw6HCu8KBbiB4ZW4ga8OhwrrCvSBjaG8gY8ODwqFjIGTDg8KybmcgKi9cclxuICB9XHJcbiAgXHJcbiAgdHI6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjNmMjsgLyogTcODwqB1IG7DocK7woFuIGtoaSBob3ZlciAqL1xyXG4gICAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XHJcbiAgfVxyXG4gIGgye1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["i0","AddUserComponent","constructor","admin","ngOnInit","fetchUsers","getAllUsers","subscribe","data","users","error","console","createUser","createNormalUser","newUser","response","log","resetForm","firstName","lastName","email","password","role","updateUser","selectedUser","alert","deleteUser","userId","deleteNormalUser","selectUser","user","resetSelection","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\voket\\Desktop\\Moduel2\\HealthCareSystem\\Frontend1\\Frontend\\src\\app\\components\\admin\\add-user\\add-user.component.html","C:\\Users\\voket\\Desktop\\Moduel2\\HealthCareSystem\\Frontend1\\Frontend\\src\\app\\components\\admin\\add-user\\add-user.component.ts"],"sourcesContent":["<div class=\"user-management\">\n  \n    <!-- Create New User Form -->\n    <!--\n    <div>\n      <h2>Create New User</h2>\n      <form (ngSubmit)=\"createUser()\">\n        <label for=\"firstName\">First Name:</label>\n        <input id=\"firstName\" [(ngModel)]=\"newUser.firstName\" name=\"firstName\" required>\n  \n        <label for=\"lastName\">Last Name:</label>\n        <input id=\"lastName\" [(ngModel)]=\"newUser.lastName\" name=\"lastName\" required>\n  \n        <label for=\"email\">Email:</label>\n        <input id=\"email\" [(ngModel)]=\"newUser.email\" name=\"email\" type=\"email\" required>\n  \n        <label for=\"password\">Password:</label>\n        <input id=\"password\" [(ngModel)]=\"newUser.password\" name=\"password\" type=\"password\" required>\n  \n        <label for=\"role\">Role:</label>\n        <select id=\"role\" [(ngModel)]=\"newUser.role\" name=\"role\">\n          <option value=\"NORMAL\">User</option>\n          <option value=\"ADMIN\">Admin</option>\n          <option value=\"DOCTOR\">Doctor</option>\n        </select>\n  \n        <button type=\"submit\">Create User</button>\n      </form>\n    </div>\n  -->\n    <!-- User List -->\n    <h2>Danh Sách các quyền</h2>\n    <table>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Email</th>\n          <th>Role</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let user of users\">\n          <td>{{ user.user.firstName }} {{ user.user.lastName }}</td>\n          <td>{{ user.user.email }}</td>\n          <td>{{ user.user.role }}</td>\n          <td>\n            <!--<button (click)=\"selectUser(user)\">Edit</button>-->\n            <button (click)=\"deleteUser(user.userId)\">Delete</button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/service/admin.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent  implements OnInit {\n  users: any[] = [];\n  selectedUser: any = null;\n  newUser: any = {};\n  \n\n  constructor(private admin: AdminService) {}\n\n  ngOnInit(): void {\n    this.fetchUsers();\n  }\n\n  fetchUsers(): void {\n    this.admin.getAllUsers().subscribe(\n      (data) => {\n        this.users = data;\n      },\n      (error) => {\n        console.error('Error fetching users:', error);\n      }\n    );\n  }\n\n  createUser(): void {\n    this.admin.createNormalUser(this.newUser).subscribe(\n      (response) => {\n        console.log('User created successfully:', response);\n        this.fetchUsers(); // Reload users after creating a new user\n        this.resetForm(); // Reset the form fields\n      },\n      (error) => {\n        console.error('Error creating user:', error);\n      }\n    );\n  }\n\n  resetForm(): void {\n    this.newUser = { firstName: '', lastName: '', email: '', password: '', role: 'NORMAL' }; // Reset form values\n  }\n\n  // Update user\n  updateUser(): void {\n    if (this.selectedUser) {\n      this.admin.updateUser(this.selectedUser.email, this.selectedUser).subscribe(\n        (response) => {\n          this.fetchUsers(); // Refresh the list after updating\n          alert('User updated successfully!');\n        },\n        (error) => {\n          console.error('Error updating user:', error);\n        }\n      );\n    }\n  }\n\n  // Delete user\n  deleteUser(userId: number): void {\n    this.admin.deleteNormalUser(userId).subscribe(\n      (response) => {\n        this.fetchUsers(); // Refresh the list after deletion\n        alert('User deleted successfully!');\n      },\n      (error) => {\n        console.error('Error deleting user:', error);\n      }\n    );\n  }\n\n  // Select user for editing\n  selectUser(user: any): void {\n    this.selectedUser = { ...user }; // Clone to prevent direct modification\n  }\n\n  // Reset selection\n  resetSelection(): void {\n    this.selectedUser = null;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}