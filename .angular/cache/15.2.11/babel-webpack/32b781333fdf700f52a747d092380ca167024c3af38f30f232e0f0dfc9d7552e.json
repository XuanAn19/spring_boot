{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./login.service\";\nexport class DoctorService {\n  constructor(http, loginService) {\n    this.http = http;\n    this.loginService = loginService;\n    this.baseUrl = 'http://localhost:8181/doctor'; // Spring Boot URL\n  }\n\n  getDoctor(userId) {\n    const url = `${this.baseUrl}/getDoctorById/${userId}`;\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\n    return this.http.get(url, {\n      headers\n    });\n  }\n  getAllDoctos() {\n    const url = `${this.baseUrl}/getAllDoc`;\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\n    return this.http.get(url, {\n      headers\n    });\n  }\n  getAllDoctorSpec() {\n    const url = `${this.baseUrl}/getAllDoctorSpecializations`;\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\n    return this.http.get(url, {\n      headers\n    });\n  }\n  getDoctorSpecializationByDoctorId(doctorId) {\n    const url = `${this.baseUrl}/getSpecializationByDoctorId/${doctorId}`;\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\n    return this.http.get(url, {\n      headers\n    });\n  }\n  static #_ = this.ɵfac = function DoctorService_Factory(t) {\n    return new (t || DoctorService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.LoginService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DoctorService,\n    factory: DoctorService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;;AAQ9D,OAAM,MAAOC,aAAa;EAMxBC,YAAoBC,IAAgB,EAAUC,YAA2B;IAArD,SAAI,GAAJD,IAAI;IAAsB,iBAAY,GAAZC,YAAY;IAHlD,YAAO,GAAG,8BAA8B,CAAC,CAAC;EAG2B;;EAG7EC,SAAS,CAACC,MAAU;IAClB,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,kBAAkBF,MAAM,EAAE;IACrD,MAAMG,OAAO,GAAG,IAAIT,WAAW,EAAE,CAACU,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACN,YAAY,CAACO,QAAQ,EAAE,CAAC;IAChG,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAML,GAAG,EAAE;MAACE;IAAO,CAAC,CAAC;EAC3C;EAEAI,YAAY;IACV,MAAMN,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,YAAY;IACvC,MAAMC,OAAO,GAAG,IAAIT,WAAW,EAAE,CAACU,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACN,YAAY,CAACO,QAAQ,EAAE,CAAC;IAChG,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAML,GAAG,EAAE;MAACE;IAAO,CAAC,CAAC;EAC3C;EAEAK,gBAAgB;IACd,MAAMP,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,8BAA8B;IACzD,MAAMC,OAAO,GAAG,IAAIT,WAAW,EAAE,CAACU,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACN,YAAY,CAACO,QAAQ,EAAE,CAAC;IAChG,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAML,GAAG,EAAE;MAACE;IAAO,CAAC,CAAC;EAC3C;EAGAM,iCAAiC,CAACC,QAAgB;IAChD,MAAMT,GAAG,GAAG,GAAG,IAAI,CAACC,OAAO,gCAAgCQ,QAAQ,EAAE;IACrE,MAAMP,OAAO,GAAG,IAAIT,WAAW,EAAE,CAACU,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,IAAI,CAACN,YAAY,CAACO,QAAQ,EAAE,CAAC;IAEhG,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAML,GAAG,EAAE;MAACE;IAAO,CAAC,CAAC;EAC3C;EAAC;qBAjCUR,aAAa;EAAA;EAAA;WAAbA,aAAa;IAAAgB,SAAbhB,aAAa;IAAAiB,YAFZ;EAAM","names":["HttpHeaders","DoctorService","constructor","http","loginService","getDoctor","userId","url","baseUrl","headers","set","getToken","get","getAllDoctos","getAllDoctorSpec","getDoctorSpecializationByDoctorId","doctorId","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\voket\\Desktop\\Moduel2\\HealthCareSystem\\Frontend1\\Frontend\\src\\app\\service\\doctor.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { LoginService } from './login.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DoctorService {\r\n\r\n\r\n  private baseUrl = 'http://localhost:8181/doctor'; // Spring Boot URL\r\n\r\n\r\n  constructor(private http: HttpClient, private loginService : LoginService) { }\r\n\r\n\r\n  getDoctor(userId:any): Observable<any> {\r\n    const url = `${this.baseUrl}/getDoctorById/${userId}`;\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\r\n    return this.http.get<any>(url, {headers});\r\n  }\r\n\r\n  getAllDoctos(): Observable<any> {\r\n    const url = `${this.baseUrl}/getAllDoc`;\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\r\n    return this.http.get<any>(url, {headers});\r\n  }\r\n\r\n  getAllDoctorSpec(): Observable<any> {\r\n    const url = `${this.baseUrl}/getAllDoctorSpecializations`;\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\r\n    return this.http.get<any>(url, {headers});\r\n  }\r\n\r\n\r\n  getDoctorSpecializationByDoctorId(doctorId: number): Observable<any> {\r\n    const url = `${this.baseUrl}/getSpecializationByDoctorId/${doctorId}`;\r\n    const headers = new HttpHeaders().set('Authorization', 'Bearer ' + this.loginService.getToken());\r\n\r\n    return this.http.get<any>(url, {headers});\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}