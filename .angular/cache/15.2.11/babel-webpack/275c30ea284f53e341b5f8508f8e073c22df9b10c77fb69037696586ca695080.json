{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/admin.service\";\nimport * as i2 from \"@angular/common\";\nfunction AddUserComponent_tr_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\")(8, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function AddUserComponent_tr_16_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const user_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.deleteUser(user_r1.userId));\n    });\n    i0.ɵɵtext(9, \"Delete\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const user_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", user_r1.firstName, \" \", user_r1.lastName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(user_r1.role);\n  }\n}\nexport class AddUserComponent {\n  constructor(admin) {\n    this.admin = admin;\n    this.users = [];\n    this.selectedUser = null;\n    this.newUser = {};\n  }\n  ngOnInit() {\n    this.fetchUsers();\n  }\n  fetchUsers() {\n    this.admin.getAllUsers().subscribe(data => {\n      this.users = data;\n    }, error => {\n      console.error('Error fetching users:', error);\n    });\n  }\n  // createUser(): void {\n  //   this.admin.createNormalUser(this.newUser).subscribe(\n  //     (response) => {\n  //       console.log('User created successfully:', response);\n  //       this.fetchUsers(); // Reload users after creating a new user\n  //       this.resetForm(); // Reset the form fields\n  //     },\n  //     (error) => {\n  //       console.error('Error creating user:', error);\n  //     }\n  //   );\n  // }\n  // resetForm(): void {\n  //   this.newUser = { firstName: '', lastName: '', email: '', password: '', role: 'NORMAL' }; // Reset form values\n  // }\n  // // Update user\n  // updateUser(): void {\n  //   if (this.selectedUser) {\n  //     this.admin.updateUser(this.selectedUser.email, this.selectedUser).subscribe(\n  //       (response) => {\n  //         this.fetchUsers(); // Refresh the list after updating\n  //         alert('User updated successfully!');\n  //       },\n  //       (error) => {\n  //         console.error('Error updating user:', error);\n  //       }\n  //     );\n  //   }\n  // }\n  // // Delete user\n  deleteUser(userId) {\n    this.admin.deleteNormalUser(userId).subscribe(response => {\n      this.fetchUsers(); // Refresh the list after deletion\n      alert('User deleted successfully!');\n    }, error => {\n      console.error('Error deleting user:', error);\n      this.fetchUsers();\n    });\n  }\n  static #_ = this.ɵfac = function AddUserComponent_Factory(t) {\n    return new (t || AddUserComponent)(i0.ɵɵdirectiveInject(i1.AdminService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddUserComponent,\n    selectors: [[\"app-add-user\"]],\n    decls: 17,\n    vars: 1,\n    consts: [[1, \"content\"], [1, \"user-management\"], [4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n    template: function AddUserComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n        i0.ɵɵtext(3, \"Danh S\\u00E1ch Ng\\u01B0\\u1EDDi D\\u00F9ng\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"table\")(5, \"thead\")(6, \"tr\")(7, \"th\");\n        i0.ɵɵtext(8, \"T\\u00EAn\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"th\");\n        i0.ɵɵtext(10, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"th\");\n        i0.ɵɵtext(12, \"Quy\\u1EC1n\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"th\");\n        i0.ɵɵtext(14, \"H\\u00E0nh \\u0110\\u1ED9ng\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"tbody\");\n        i0.ɵɵtemplate(16, AddUserComponent_tr_16_Template, 10, 4, \"tr\", 2);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"ngForOf\", ctx.users);\n      }\n    },\n    dependencies: [i2.NgForOf],\n    styles: [\".content[_ngcontent-%COMP%]{\\r\\n    height: 85vh;\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    justify-content: center;\\r\\n    align-items: flex-start;\\r\\n    background-image: url(https://themewagon.github.io/medicalcenter/assets/img/hero/hero2.png);\\r\\n}\\r\\n\\r\\n.content[_ngcontent-%COMP%] {\\r\\n  max-width: 600px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.example-form[_ngcontent-%COMP%] {\\r\\n  margin-bottom: 20px;\\r\\n}\\r\\n\\r\\n.specialization-table[_ngcontent-%COMP%] {\\r\\n  width: 100%;\\r\\n  border-collapse: collapse;\\r\\n}\\r\\n\\r\\n.specialization-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .specialization-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\r\\n  padding: 8px;\\r\\n  text-align: left;\\r\\n  border: 1px solid #ddd;\\r\\n}\\r\\n\\r\\n.specialization-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\r\\n  background-color: #f2f2f2;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%] {\\r\\n  background-color: #f44336;\\r\\n  color: white;\\r\\n  border: none;\\r\\n  padding: 5px 10px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\nbutton[_ngcontent-%COMP%]:hover {\\r\\n  background-color: #d32f2f;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hZG1pbi9hZGQtdXNlci9hZGQtdXNlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsdUJBQXVCO0lBQ3ZCLHVCQUF1QjtJQUN2QiwyRkFBMkY7QUFDL0Y7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsV0FBVztFQUNYLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudHtcclxuICAgIGhlaWdodDogODV2aDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChodHRwczovL3RoZW1ld2Fnb24uZ2l0aHViLmlvL21lZGljYWxjZW50ZXIvYXNzZXRzL2ltZy9oZXJvL2hlcm8yLnBuZyk7XHJcbn1cclxuXHJcbi5jb250ZW50IHtcclxuICBtYXgtd2lkdGg6IDYwMHB4O1xyXG4gIG1hcmdpbjogYXV0bztcclxufVxyXG5cclxuLmV4YW1wbGUtZm9ybSB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuLnNwZWNpYWxpemF0aW9uLXRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG59XHJcblxyXG4uc3BlY2lhbGl6YXRpb24tdGFibGUgdGgsIC5zcGVjaWFsaXphdGlvbi10YWJsZSB0ZCB7XHJcbiAgcGFkZGluZzogOHB4O1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxufVxyXG5cclxuLnNwZWNpYWxpemF0aW9uLXRhYmxlIHRoIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzY7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBwYWRkaW5nOiA1cHggMTBweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbmJ1dHRvbjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2QzMmYyZjtcclxufVxyXG5cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;IA2CIA,0BAA+B;IACzBA,YAAwC;IAAAA,iBAAK;IACjDA,0BAAI;IAAAA,YAAgB;IAAAA,iBAAK;IACzBA,0BAAI;IAAAA,YAAe;IAAAA,iBAAK;IACxBA,0BAAI;IAEMA;MAAA;MAAA;MAAA;MAAA,OAASA,gDAAuB;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;;;;IALvDA,eAAwC;IAAxCA,uEAAwC;IACxCA,eAAgB;IAAhBA,mCAAgB;IAChBA,eAAe;IAAfA,kCAAe;;;ACtCzB,OAAM,MAAOC,gBAAgB;EAM3BC,YAAoBC,KAAmB;IAAnB,UAAK,GAALA,KAAK;IALzB,UAAK,GAAU,EAAE;IACjB,iBAAY,GAAQ,IAAI;IACxB,YAAO,GAAQ,EAAE;EAGyB;EAE1CC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;EACnB;EAEAA,UAAU;IACR,IAAI,CAACF,KAAK,CAACG,WAAW,EAAE,CAACC,SAAS,CAC/BC,IAAI,IAAI;MACP,IAAI,CAACC,KAAK,GAAGD,IAAI;IACnB,CAAC,EACAE,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CACF;EACH;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACAE,UAAU,CAACC,MAAc;IACvB,IAAI,CAACV,KAAK,CAACW,gBAAgB,CAACD,MAAM,CAAC,CAACN,SAAS,CAC1CQ,QAAQ,IAAI;MACX,IAAI,CAACV,UAAU,EAAE,CAAC,CAAC;MACnBW,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,EACAN,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,IAAI,CAACL,UAAU,EAAE;IACnB,CAAC,CACF;EACH;EAAC;qBAnEUJ,gBAAgB;EAAA;EAAA;UAAhBA,gBAAgB;IAAAgB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDR7BrB,8BAAqB;QAgCbA,wDAAoB;QAAAA,iBAAK;QACjCA,6BAAO;QAGGA,wBAAG;QAAAA,iBAAK;QACZA,0BAAI;QAAAA,sBAAK;QAAAA,iBAAK;QACdA,2BAAI;QAAAA,2BAAK;QAAAA,iBAAK;QACdA,2BAAI;QAAAA,yCAAS;QAAAA,iBAAK;QAGtBA,8BAAO;QACLA,kEAQK;QACPA,iBAAQ;;;QATeA,gBAAQ;QAARA,mCAAQ","names":["i0","AddUserComponent","constructor","admin","ngOnInit","fetchUsers","getAllUsers","subscribe","data","users","error","console","deleteUser","userId","deleteNormalUser","response","alert","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\voket\\Desktop\\Moduel2\\HealthCareSystem\\Frontend1\\Frontend\\src\\app\\components\\admin\\add-user\\add-user.component.html","C:\\Users\\voket\\Desktop\\Moduel2\\HealthCareSystem\\Frontend1\\Frontend\\src\\app\\components\\admin\\add-user\\add-user.component.ts"],"sourcesContent":["<div class=\"content\">\n<div class=\"user-management\">\n  \n    <!-- Create New User Form -->\n    <!--\n    <div>\n      <h2>Create New User</h2>\n      <form (ngSubmit)=\"createUser()\">\n        <label for=\"firstName\">First Name:</label>\n        <input id=\"firstName\" [(ngModel)]=\"newUser.firstName\" name=\"firstName\" required>\n  \n        <label for=\"lastName\">Last Name:</label>\n        <input id=\"lastName\" [(ngModel)]=\"newUser.lastName\" name=\"lastName\" required>\n  \n        <label for=\"email\">Email:</label>\n        <input id=\"email\" [(ngModel)]=\"newUser.email\" name=\"email\" type=\"email\" required>\n  \n        <label for=\"password\">Password:</label>\n        <input id=\"password\" [(ngModel)]=\"newUser.password\" name=\"password\" type=\"password\" required>\n  \n        <label for=\"role\">Role:</label>\n        <select id=\"role\" [(ngModel)]=\"newUser.role\" name=\"role\">\n          <option value=\"NORMAL\">User</option>\n          <option value=\"ADMIN\">Admin</option>\n          <option value=\"DOCTOR\">Doctor</option>\n        </select>\n  \n        <button type=\"submit\">Create User</button>\n      </form>\n    </div>\n  -->\n    <!-- User List -->\n    <h2>Danh Sách Người Dùng</h2>\n<table>\n  <thead>\n    <tr>\n      <th>Tên</th>\n      <th>Email</th>\n      <th>Quyền</th>\n      <th>Hành Động</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let user of users\">\n      <td>{{ user.firstName }} {{ user.lastName }}</td>\n      <td>{{ user.email }}</td>\n      <td>{{ user.role }}</td>\n      <td>\n        <!--<button (click)=\"selectUser(user)\">Edit</button>-->\n        <button (click)=\"deleteUser(user.userId)\">Delete</button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/service/admin.service';\n\n@Component({\n  selector: 'app-add-user',\n  templateUrl: './add-user.component.html',\n  styleUrls: ['./add-user.component.css']\n})\nexport class AddUserComponent  implements OnInit {\n  users: any[] = [];\n  selectedUser: any = null;\n  newUser: any = {};\n  \n\n  constructor(private admin: AdminService) {}\n\n  ngOnInit(): void {\n    this.fetchUsers();\n  }\n\n  fetchUsers(): void {\n    this.admin.getAllUsers().subscribe(\n      (data) => {\n        this.users = data;\n      },\n      (error) => {\n        console.error('Error fetching users:', error);\n      }\n    );\n  }\n\n  // createUser(): void {\n  //   this.admin.createNormalUser(this.newUser).subscribe(\n  //     (response) => {\n  //       console.log('User created successfully:', response);\n  //       this.fetchUsers(); // Reload users after creating a new user\n  //       this.resetForm(); // Reset the form fields\n  //     },\n  //     (error) => {\n  //       console.error('Error creating user:', error);\n  //     }\n  //   );\n  // }\n\n  // resetForm(): void {\n  //   this.newUser = { firstName: '', lastName: '', email: '', password: '', role: 'NORMAL' }; // Reset form values\n  // }\n\n  // // Update user\n  // updateUser(): void {\n  //   if (this.selectedUser) {\n  //     this.admin.updateUser(this.selectedUser.email, this.selectedUser).subscribe(\n  //       (response) => {\n  //         this.fetchUsers(); // Refresh the list after updating\n  //         alert('User updated successfully!');\n  //       },\n  //       (error) => {\n  //         console.error('Error updating user:', error);\n  //       }\n  //     );\n  //   }\n  // }\n\n  // // Delete user\n  deleteUser(userId: number): void {\n    this.admin.deleteNormalUser(userId).subscribe(\n      (response) => {\n        this.fetchUsers(); // Refresh the list after deletion\n        alert('User deleted successfully!');\n      },\n      (error) => {\n        console.error('Error deleting user:', error);\n        this.fetchUsers();\n      }\n    );\n  }\n\n  // // Select user for editing\n  // selectUser(user: any): void {\n  //   this.selectedUser = { ...user }; // Clone to prevent direct modification\n  // }\n\n  // // Reset selection\n  // resetSelection(): void {\n  //   this.selectedUser = null;\n  // }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}